<UserControl x:Class="WindowsCalculator.StandardCalculatorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:WindowsCalculator"
             xmlns:converters="clr-namespace:WindowsCalculator.Converters"
             mc:Ignorable="d"
             x:Name="standardCalculatorView"
             Height="471" Width="321"
             Focusable="True"
             FocusVisualStyle="{x:Null}"
             IsTabStop="True">
    <UserControl.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:ContainsTextConverter x:Key="ContainsTextConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="140" />
            <RowDefinition Height="30" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Display Area -->
        <Grid Grid.Row="0" Background="#202020">
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="20" />
                <RowDefinition Height="70" />
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Height="40">
                <TextBlock x:Name="TitleTextBlock"
                           Text="Standard"
                           Foreground="White"
                           FontSize="20"
                           FontWeight="SemiBold"
                           VerticalAlignment="Center" Margin="15,0,0,0" />
            </StackPanel>

            <TextBlock Grid.Row="1" x:Name="ExpressionTextBlock"
                       Text="{Binding ExpressionText}"
                       Foreground="#BFD6D6D6"
                       FontSize="14"
                       TextAlignment="Right"
                       Margin="10,0,15,0" />

            <TextBlock Grid.Row="2" x:Name="ResultTextBlock"
                       Text="{Binding DisplayText}"
                       Foreground="White"
                       FontWeight="SemiBold"
                       TextAlignment="Right"
                       Margin="10,0,15,0">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontSize" Value="48" />
                        <Style.Triggers>
                            <!-- Use ContainsTextConverter for more flexible error message handling -->
                            <DataTrigger Binding="{Binding DisplayText, Converter={StaticResource ContainsTextConverter}, ConverterParameter=Cannot}" Value="True">
                                <Setter Property="FontSize" Value="28" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText, Converter={StaticResource ContainsTextConverter}, ConverterParameter=Error}" Value="True">
                                <Setter Property="FontSize" Value="24" />
                            </DataTrigger>

                            <!-- Keep specific error messages with exact sizing -->
                            <DataTrigger Binding="{Binding DisplayText}" Value="Cannot compute square root of a negative number.">
                                <Setter Property="FontSize" Value="22" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText}" Value="Error: Overflow.">
                                <Setter Property="FontSize" Value="32" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText}" Value="Error: Value was either too large or too small for a Decimal.">
                                <Setter Property="FontSize" Value="16" />
                            </DataTrigger>

                            <!-- Check for text lengths at specific values -->
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="12">
                                <Setter Property="FontSize" Value="40" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="13">
                                <Setter Property="FontSize" Value="39" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="14">
                                <Setter Property="FontSize" Value="38" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="15">
                                <Setter Property="FontSize" Value="37" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="16">
                                <Setter Property="FontSize" Value="36" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="17">
                                <Setter Property="FontSize" Value="35" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="18">
                                <Setter Property="FontSize" Value="33" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="19">
                                <Setter Property="FontSize" Value="31" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="20">
                                <Setter Property="FontSize" Value="29" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="21">
                                <Setter Property="FontSize" Value="27" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="22">
                                <Setter Property="FontSize" Value="26" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="23">
                                <Setter Property="FontSize" Value="25" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="24">
                                <Setter Property="FontSize" Value="24" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="25">
                                <Setter Property="FontSize" Value="23" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="26">
                                <Setter Property="FontSize" Value="22" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="27">
                                <Setter Property="FontSize" Value="21" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="28">
                                <Setter Property="FontSize" Value="20" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="29">
                                <Setter Property="FontSize" Value="19" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayText.Length}" Value="30">
                                <Setter Property="FontSize" Value="18" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>

        <!-- Memory Buttons Area -->
        <Grid Grid.Row="1" Background="#202020" Margin="3,0,3,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid.Resources>
                <Style x:Key="MemoryButtonStyle" TargetType="Button">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="FontSize" Value="12" />
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="28" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="buttonBorder" CornerRadius="4"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="0">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="buttonBorder" Property="Background" Value="#2D2D2D" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="buttonBorder" Property="Background" Value="#292929" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <!-- Style pentru butoanele de operații în lista de memorie -->
                <Style x:Key="MemoryItemButtonStyle" TargetType="Button">
                    <Setter Property="Background" Value="#323232" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="FontSize" Value="10" />
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="24" />
                    <Setter Property="Margin" Value="1" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="buttonBorder" CornerRadius="3"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="0">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="buttonBorder" Property="Background" Value="#3D3D3D" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="buttonBorder" Property="Background" Value="#383838" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>

            <Button Grid.Column="0" Content="MC" Style="{StaticResource MemoryButtonStyle}" x:Name="MemoryClearButton"
                    Command="{Binding MemoryClearCommand}" />
            <Button Grid.Column="1" Content="MR" Style="{StaticResource MemoryButtonStyle}" x:Name="MemoryRecallButton"
                    Command="{Binding MemoryRecallCommand}" />
            <Button Grid.Column="2" Content="M+" Style="{StaticResource MemoryButtonStyle}" x:Name="MemoryAddButton"
                    Command="{Binding MemoryAddCommand}" />
            <Button Grid.Column="3" Content="M-" Style="{StaticResource MemoryButtonStyle}" x:Name="MemorySubtractButton"
                    Command="{Binding MemorySubtractCommand}" />
            <Button Grid.Column="4" Content="MS" Style="{StaticResource MemoryButtonStyle}" x:Name="MemoryStoreButton"
                    Command="{Binding MemoryStoreCommand}" />
            <Button Grid.Column="5" Content="M▾" Style="{StaticResource MemoryButtonStyle}" x:Name="MemoryListButton"
                    Click="MemoryListButton_Click" />

            <!-- Memory Popup -->
            <Popup x:Name="MemoryPopup"
                   PlacementTarget="{Binding ElementName=MemoryListButton}"
                   Placement="Right"
                   AllowsTransparency="True"
                   StaysOpen="False"
                   PopupAnimation="Slide">
                <Border Background="#252525"
                        BorderBrush="#353535"
                        BorderThickness="1"
                        CornerRadius="5"
                        Width="190"
                        MinHeight="150"
                        MaxHeight="350">
                    <StackPanel>
                        <TextBlock Text="Memory"
                                   Foreground="White"
                                   FontSize="16"
                                   Margin="10,5,0,10"
                                   FontWeight="SemiBold" />
                        <ListBox x:Name="MemoryList"
                             ItemsSource="{Binding MemoryValues}"
                             Foreground="White"
                             Background="#252525"
                             BorderThickness="0"
                             Padding="5"
                             MaxHeight="300"
                             ScrollViewer.VerticalScrollBarVisibility="Auto"
                             Visibility="{Binding IsMemoryEmpty, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Border Background="Transparent" CornerRadius="4" Margin="0,2" Padding="8,6">
                                        <StackPanel>
                                            <TextBlock Text="{Binding}" Foreground="White" FontSize="14" FontWeight="SemiBold" />
                                            <!-- Memory operation buttons for each item -->
                                            <Grid Margin="0,6,0,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="30" />
                                                    <ColumnDefinition Width="30" />
                                                    <ColumnDefinition Width="30" />
                                                    <ColumnDefinition Width="30" />
                                                </Grid.ColumnDefinitions>

                                                <Button Grid.Column="0" Content="MR"
                                                        Tag="{Binding}"
                                                        Click="MemoryItemRecall_Click"
                                                        Style="{StaticResource MemoryItemButtonStyle}" />
                                                <Button Grid.Column="1" Content="MC"
                                                        Tag="{Binding}"
                                                        Click="MemoryItemClear_Click"
                                                        Style="{StaticResource MemoryItemButtonStyle}" />
                                                <Button Grid.Column="2" Content="M+"
                                                        Tag="{Binding}"
                                                        Click="MemoryItemAdd_Click"
                                                        Style="{StaticResource MemoryItemButtonStyle}" />
                                                <Button Grid.Column="3" Content="M-"
                                                        Tag="{Binding}"
                                                        Click="MemoryItemSubtract_Click"
                                                        Style="{StaticResource MemoryItemButtonStyle}" />
                                            </Grid>
                                        </StackPanel>
                                    </Border>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>

                        <TextBlock Text="No items in memory"
                            Foreground="#AAAAAA"
                            HorizontalAlignment="Center"
                            Visibility="{Binding IsMemoryEmpty, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true}"
                            Margin="0,40,0,0" />
                    </StackPanel>
                </Border>
            </Popup>
        </Grid>

        <!-- Buttons Area -->
        <Grid Grid.Row="2" Margin="3,0,3,3">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Style pentru butoane cu colțuri rotunjite și efect de hover -->
            <Grid.Resources>
                <!-- Stil pentru butoanele funcțiilor standard (culoare gri deschis) -->
                <Style x:Key="ButtonStyle" TargetType="Button">
                    <Setter Property="Background" Value="#3B3B3B" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="FontSize" Value="18" />
                    <Setter Property="FontWeight" Value="Regular" />
                    <Setter Property="Margin" Value="1.5" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="buttonBorder" CornerRadius="5"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="0">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="buttonBorder" Property="Background" Value="#323232" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="buttonBorder" Property="Background" Value="#FF292929" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <!-- Stil pentru butoanele de funcții speciale (culoare gri inchis) -->
                <Style x:Key="SpecialButtonStyle" TargetType="Button">
                    <Setter Property="Background" Value="#323232" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="FontSize" Value="14.5" />
                    <Setter Property="FontWeight" Value="Regular" />
                    <Setter Property="Margin" Value="1.5" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="buttonBorder" CornerRadius="5"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="0">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="buttonBorder" Property="Background" Value="#3B3B3B" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="buttonBorder" Property="Background" Value="#FF292929" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <!-- Stil pentru butoanele de operații (+, -, ×, ÷) -->
                <Style x:Key="MathOperationButtonStyle" TargetType="Button">
                    <Setter Property="Background" Value="#323232" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="FontSize" Value="28" />
                    <Setter Property="FontWeight" Value="Light" />
                    <Setter Property="Margin" Value="1.5" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="buttonBorder" CornerRadius="5"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="0">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" Margin="0,-5,0,0" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="buttonBorder" Property="Background" Value="#3B3B3B" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="buttonBorder" Property="Background" Value="#FF292929" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <!-- Stil pentru butonul = (culoare albastru) -->
                <Style x:Key="OperationButtonStyle" TargetType="Button">
                    <Setter Property="Background" Value="#4CC2FF" />
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="FontSize" Value="30" />
                    <Setter Property="FontWeight" Value="light" />
                    <Setter Property="Margin" Value="1.5" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="buttonBorder" CornerRadius="5"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="0">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" Margin="0,-5,0,0" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="buttonBorder" Property="Background" Value="#47B1E8" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="buttonBorder" Property="Background" Value="#42A1D2" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>

            <!-- Row 0 - Special Functions -->
            <Button Grid.Row="0" Grid.Column="0" Content="%" Style="{StaticResource SpecialButtonStyle}"
                    Command="{Binding PercentageCommand}" />
            <Button Grid.Row="0" Grid.Column="1" Content="CE" Style="{StaticResource SpecialButtonStyle}"
                    Command="{Binding ClearEntryCommand}" />
            <Button Grid.Row="0" Grid.Column="2" Content="C" Style="{StaticResource SpecialButtonStyle}"
                    Command="{Binding ClearCommand}" />
            <Button Grid.Row="0" Grid.Column="3" Content="⌫" Style="{StaticResource SpecialButtonStyle}"
                    Command="{Binding BackspaceCommand}" />

            <!-- Row 1 - First Row of Functions -->
            <Button Grid.Row="1" Grid.Column="0" Content="1/x" Style="{StaticResource SpecialButtonStyle}"
                    Command="{Binding SpecialFunctionCommand}" CommandParameter="1/x" />
            <Button Grid.Row="1" Grid.Column="1" Content="x²" Style="{StaticResource SpecialButtonStyle}"
                    Command="{Binding SpecialFunctionCommand}" CommandParameter="x²" />
            <Button Grid.Row="1" Grid.Column="2" Content="√" Style="{StaticResource SpecialButtonStyle}"
                    Command="{Binding SpecialFunctionCommand}" CommandParameter="√" />
            <Button Grid.Row="1" Grid.Column="3" Content="÷" Style="{StaticResource MathOperationButtonStyle}"
                    Command="{Binding OperationCommand}" CommandParameter="÷" />

            <!-- Row 2 - 7,8,9,× -->
            <Button Grid.Row="2" Grid.Column="0" Content="7" Style="{StaticResource ButtonStyle}"
                    Command="{Binding NumberCommand}" CommandParameter="7" />
            <Button Grid.Row="2" Grid.Column="1" Content="8" Style="{StaticResource ButtonStyle}"
                    Command="{Binding NumberCommand}" CommandParameter="8" />
            <Button Grid.Row="2" Grid.Column="2" Content="9" Style="{StaticResource ButtonStyle}"
                    Command="{Binding NumberCommand}" CommandParameter="9" />
            <Button Grid.Row="2" Grid.Column="3" Content="×" Style="{StaticResource MathOperationButtonStyle}"
                    Command="{Binding OperationCommand}" CommandParameter="×" />

            <!-- Row 3 - 4,5,6,- -->
            <Button Grid.Row="3" Grid.Column="0" Content="4" Style="{StaticResource ButtonStyle}"
                    Command="{Binding NumberCommand}" CommandParameter="4" />
            <Button Grid.Row="3" Grid.Column="1" Content="5" Style="{StaticResource ButtonStyle}"
                    Command="{Binding NumberCommand}" CommandParameter="5" />
            <Button Grid.Row="3" Grid.Column="2" Content="6" Style="{StaticResource ButtonStyle}"
                    Command="{Binding NumberCommand}" CommandParameter="6" />
            <Button Grid.Row="3" Grid.Column="3" Content="-" Style="{StaticResource MathOperationButtonStyle}"
                    Command="{Binding OperationCommand}" CommandParameter="-" />

            <!-- Row 4 - 1,2,3,+ -->
            <Button Grid.Row="4" Grid.Column="0" Content="1" Style="{StaticResource ButtonStyle}"
                    Command="{Binding NumberCommand}" CommandParameter="1" />
            <Button Grid.Row="4" Grid.Column="1" Content="2" Style="{StaticResource ButtonStyle}"
                    Command="{Binding NumberCommand}" CommandParameter="2" />
            <Button Grid.Row="4" Grid.Column="2" Content="3" Style="{StaticResource ButtonStyle}"
                    Command="{Binding NumberCommand}" CommandParameter="3" />
            <Button Grid.Row="4" Grid.Column="3" Content="+" Style="{StaticResource MathOperationButtonStyle}"
                    Command="{Binding OperationCommand}" CommandParameter="+" />

            <!-- Row 5 - +/-,0,.,= -->
            <Button Grid.Row="5" Grid.Column="0" Content="±" Style="{StaticResource ButtonStyle}"
                    Command="{Binding NegateCommand}" />
            <Button Grid.Row="5" Grid.Column="1" Content="0" Style="{StaticResource ButtonStyle}"
                    Command="{Binding NumberCommand}" CommandParameter="0" />
            <Button Grid.Row="5" Grid.Column="2" Content="." Style="{StaticResource ButtonStyle}"
                    Command="{Binding DecimalPointCommand}" />
            <Button Grid.Row="5" Grid.Column="3" Content="=" Style="{StaticResource OperationButtonStyle}"
                    Command="{Binding EqualsCommand}" />
        </Grid>
    </Grid>
</UserControl>